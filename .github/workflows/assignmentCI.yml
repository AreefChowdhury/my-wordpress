name: CI/CD Workflow

on:
  push:
    branches:
      - '*'  # Trigger on all branches
  pull_request:
    branches:
      - '*'  # Trigger on all branches

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: syy25/scc-assignment
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install Dependencies
      run: |
        # Replace these commands with the actual commands needed to install your project's dependencies.
        npm install  # Install project dependencies

    - name: Debug MySQL Connection
      run: |
        # Attempt MySQL connection with diagnostic output.
        echo "Attempting MySQL connection..."
        mysql -u $MYSQL_USER -p $MYSQL_PASSWORD -h $MYSQL_HOST -e "SELECT 1;"

    - name: Run Tests (Customizable)
      run: |
        # Here, you can define the commands to run your tests. This can vary depending on your project and testing framework.
        # Example for PHPUnit tests:
        mysql -u root -e 'CREATE DATABASE my_test_database;'
        mysql -u root -e "GRANT ALL PRIVILEGES ON my_test_database.* TO 'my_test_user'@'localhost' IDENTIFIED BY 'my_test_password';"
        phpunit

    - name: Clean Up (Customizable)
      run: |
        # You can add cleanup steps here if necessary. For example, cleaning up the database.
        mysql -u root -e 'DROP DATABASE my_test_database;'

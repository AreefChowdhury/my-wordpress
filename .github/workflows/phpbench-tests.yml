name: PHPBench Tests

on:
  push:
    branches:
      - master
      - trunk
      - '3.[7-9]'
      - '[4-9].[0-9]'
    tags:
      - '3.[7-9]*'
      - '[4-9].[0-9]*'
  pull_request:
    branches:
      - master
      - trunk
      - '3.[7-9]'
      - '[4-9].[0-9]'
  workflow_dispatch:
  # Once weekly On Sundays at 00:00 UTC.
  schedule:
    - cron: '0 0 * * 0'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ true }}
  LOCAL_PHP_MEMCACHED: ${{ false }}

jobs:
  # Runs the PHPBench tests for WordPress.
  bench-php:
    name: ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ github.repository == 'WordPress/wordpress-develop' || github.event_name == 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '5.6.20', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1' ]
        os: [ ubuntu-latest ]

    env:
      LOCAL_PHP: ${{ matrix.php }}-fpm

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

      - name: Install NodeJS
        uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # v2.2.2
        with:
          node-version: 14
          cache: npm

      - name: Install Dependencies
        run: npm ci

      # This date is used to ensure that the Composer cache is refreshed at least once every week.
      # http://man7.org/linux/man-pages/man1/date.1.html
      - name: "Get last Monday's date"
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u --date='last Mon' "+%F")"

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6 # v2.1.4
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-date-${{ steps.get-date.outputs.date }}-composer-${{ hashFiles('**/composer.json') }}

      - name: Install Composer dependencies
        run: |
          docker-compose run --rm php composer --version

          # Install using `composer update` as there is no `composer.lock` file.
          if [ ${{ env.LOCAL_PHP }} == '8.1-fpm' ]; then
            docker-compose run --rm php composer update --ignore-platform-reqs
          else
            docker-compose run --rm php composer update
          fi

      - name: Install PHPBench
        run: composer require --dev phpbench/phpbench

      - name: Start Docker environment
        run: |
          npm run env:start

      - name: WordPress Docker container debug information
        run: |
          docker-compose run --rm mysql mysql --version
          docker-compose run --rm php php --version
          docker-compose run --rm php php -m
          docker-compose run --rm php php -i
          docker-compose run --rm php locale -a

      - name: Install WordPress
        run: npm run env:install

      - name: Run PHPBench tests
        run: docker-compose run php ./vendor/bin/phpbench run tests/Benchmark --report=aggregate

name: PHP Compatibility Testing

on: [push]

env:
  LOCAL_DIR: build
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ true }}
  PHP_FPM_UID: 1001 # This needs to be dynamic
  PHP_FPM_GID: 116 # This needs to be dynamic

jobs:

  # Runs PHP compatibility testing.
  #
  # Violations are reported inline with annotations.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Configures caching for Composer.
  # - Sets up PHP.
  # - Logs debug information about the runner container.
  # - Installs Composer dependencies (from cache if possible).
  # - Runs the PHP compatibility tests.
  php-comatibility:
    name: Test PHP compatibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Composer dependencies
        if: ${{ env.COMPOSER_INSTALL == true || env.LOCAL_PHP == '8.0-fpm' }}
        run: |
          docker-compose run --rm php composer --version

          # The PHPUnit 7.x phar is not compatible with PHP 8 and won't be updated,
          # as PHPUnit 7 is no longer supported, so run the Composer-installed PHPUnit instead.
          if [ ${{ env.LOCAL_PHP }} == '8.0-fpm' ]; then
            docker-compose run --rm php composer install --ignore-platform-reqs
            echo "PHPUNIT_LIBRARY=php-composer" >> $GITHUB_ENV
          else
            docker-compose run --rm php composer install
          fi

      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install NPM
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Dependencies
        run: npm ci

      - name: Build WordPress
        run: npm run build

      - name: Start Docker environment
        run: |
          npm run env:start

      - name: Log running Docker containers
        run: docker ps -a

      - name: Docker debug information
        run: |
          docker -v
          docker-compose -v
          docker-compose run --rm mysql mysql --version
          docker-compose run --rm php php --version
          docker-compose run --rm php php -m

      - name: Install WordPress
        run: npm run env:install

      - name: Compatibility testing
        run: docker-compose run --rm php composer compat



#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: "latest"
#          coverage: none
#
#      - name: Log debug information
#        run: |
#          php --version
#          composer --version
#
#      - name: Install Composer dependencies
#        run: |
#          composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction
#          echo "vendor/bin" >> $GITHUB_PATH
#
#      - name: Run PHP compatibility tests
#        uses: wearerequired/lint-action@v1
#        with:
#          github_token: ${{ secrets.github_token }}
#          php_codesniffer: true
#          php_codesniffer_args: "--standard=phpcompat.xml.dist"

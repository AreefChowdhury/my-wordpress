{"version":3,"names":["_classnames","_interopRequireDefault","require","_i18n","_components","_blockEditor","_data","_blocks","_utils","ColumnsEditContainer","attributes","setAttributes","updateAlignment","updateColumns","clientId","isStackedOnMobile","verticalAlignment","templateLock","count","canInsertColumnBlock","minCount","useSelect","select","canInsertBlockType","canRemoveBlock","getBlocks","getBlockCount","blockEditorStore","innerBlocks","preventRemovalBlockIndexes","reduce","acc","block","index","push","Math","max","classes","classnames","blockProps","useBlockProps","className","innerBlocksProps","useInnerBlocksProps","orientation","renderAppender","_react","createElement","Fragment","BlockControls","BlockVerticalAlignmentToolbar","onChange","value","InspectorControls","PanelBody","RangeControl","__nextHasNoMarginBottom","__next40pxDefaultSize","label","__","min","Notice","status","isDismissible","ToggleControl","checked","ColumnsEditContainerWrapper","withDispatch","dispatch","ownProps","registry","updateBlockAttributes","getBlockOrder","innerBlockClientIds","forEach","innerBlockClientId","previousColumns","newColumns","replaceInnerBlocks","hasExplicitWidths","hasExplicitPercentColumnWidths","isAddingColumn","newColumnWidth","toWidthPrecision","widths","getRedistributedColumnWidths","getMappedColumnWidths","Array","from","length","map","createBlock","width","slice","Placeholder","name","blockType","defaultVariation","variations","getBlockVariations","getBlockType","getDefaultBlockVariation","blocksStore","useDispatch","__experimentalBlockVariationPicker","icon","src","title","onSelect","nextVariation","createBlocksFromInnerBlocksTemplate","allowSkip","ColumnsEdit","props","hasInnerBlocks","Component","_default","exports","default"],"sources":["@wordpress/block-library/src/columns/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tNotice,\n\tPanelBody,\n\tRangeControl,\n\tToggleControl,\n} from '@wordpress/components';\n\nimport {\n\tInspectorControls,\n\tuseInnerBlocksProps,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\t__experimentalBlockVariationPicker,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { withDispatch, useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\thasExplicitPercentColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n} from './utils';\n\nfunction ColumnsEditContainer( {\n\tattributes,\n\tsetAttributes,\n\tupdateAlignment,\n\tupdateColumns,\n\tclientId,\n} ) {\n\tconst { isStackedOnMobile, verticalAlignment, templateLock } = attributes;\n\n\tconst { count, canInsertColumnBlock, minCount } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tcanRemoveBlock,\n\t\t\t\tgetBlocks,\n\t\t\t\tgetBlockCount,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst innerBlocks = getBlocks( clientId );\n\n\t\t\t// Get the indexes of columns for which removal is prevented.\n\t\t\t// The highest index will be used to determine the minimum column count.\n\t\t\tconst preventRemovalBlockIndexes = innerBlocks.reduce(\n\t\t\t\t( acc, block, index ) => {\n\t\t\t\t\tif ( ! canRemoveBlock( block.clientId ) ) {\n\t\t\t\t\t\tacc.push( index );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tcount: getBlockCount( clientId ),\n\t\t\t\tcanInsertColumnBlock: canInsertBlockType(\n\t\t\t\t\t'core/column',\n\t\t\t\t\tclientId\n\t\t\t\t),\n\t\t\t\tminCount: Math.max( ...preventRemovalBlockIndexes ) + 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst classes = classnames( {\n\t\t[ `are-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t\t[ `is-not-stacked-on-mobile` ]: ! isStackedOnMobile,\n\t} );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classes,\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\torientation: 'horizontal',\n\t\trenderAppender: false,\n\t\ttemplateLock,\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t{ canInsertColumnBlock && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\t\tvalue={ count }\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\tupdateColumns(\n\t\t\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t\t\t\tMath.max( minCount, value )\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmin={ Math.max( 1, minCount ) }\n\t\t\t\t\t\t\t\tmax={ Math.max( 6, count ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ count > 6 && (\n\t\t\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\t\t\tstatus=\"warning\"\n\t\t\t\t\t\t\t\t\tisDismissible={ false }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'This column count exceeds the recommended amount and may cause visual breakage.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</Notice>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Stack on mobile' ) }\n\t\t\t\t\t\tchecked={ isStackedOnMobile }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tisStackedOnMobile: ! isStackedOnMobile,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nconst ColumnsEditContainerWrapper = withDispatch(\n\t( dispatch, ownProps, registry ) => ( {\n\t\t/**\n\t\t * Update all child Column blocks with a new vertical alignment setting\n\t\t * based on whatever alignment is passed in. This allows change to parent\n\t\t * to overide anything set on a individual column basis.\n\t\t *\n\t\t * @param {string} verticalAlignment the vertical alignment setting\n\t\t */\n\t\tupdateAlignment( verticalAlignment ) {\n\t\t\tconst { clientId, setAttributes } = ownProps;\n\t\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\t\t\tconst { getBlockOrder } = registry.select( blockEditorStore );\n\n\t\t\t// Update own alignment.\n\t\t\tsetAttributes( { verticalAlignment } );\n\n\t\t\t// Update all child Column Blocks to match.\n\t\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\t\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\n\t\t\t\tupdateBlockAttributes( innerBlockClientId, {\n\t\t\t\t\tverticalAlignment,\n\t\t\t\t} );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Updates the column count, including necessary revisions to child Column\n\t\t * blocks to grant required or redistribute available space.\n\t\t *\n\t\t * @param {number} previousColumns Previous column count.\n\t\t * @param {number} newColumns      New column count.\n\t\t */\n\t\tupdateColumns( previousColumns, newColumns ) {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { replaceInnerBlocks } = dispatch( blockEditorStore );\n\t\t\tconst { getBlocks } = registry.select( blockEditorStore );\n\n\t\t\tlet innerBlocks = getBlocks( clientId );\n\t\t\tconst hasExplicitWidths =\n\t\t\t\thasExplicitPercentColumnWidths( innerBlocks );\n\n\t\t\t// Redistribute available width for existing inner blocks.\n\t\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\n\t\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t\t// constraining the available working width.\n\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t100 - newColumnWidth\n\t\t\t\t);\n\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t\t...Array.from( {\n\t\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t\t} ).map( () => {\n\t\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\t\twidth: `${ newColumnWidth }%`,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else if ( isAddingColumn ) {\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...innerBlocks,\n\t\t\t\t\t...Array.from( {\n\t\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t\t} ).map( () => {\n\t\t\t\t\t\treturn createBlock( 'core/column' );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else if ( newColumns < previousColumns ) {\n\t\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\t\tinnerBlocks = innerBlocks.slice(\n\t\t\t\t\t0,\n\t\t\t\t\t-( previousColumns - newColumns )\n\t\t\t\t);\n\t\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t\t100\n\t\t\t\t\t);\n\n\t\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treplaceInnerBlocks( clientId, innerBlocks );\n\t\t},\n\t} )\n)( ColumnsEditContainer );\n\nfunction Placeholder( { clientId, name, setAttributes } ) {\n\tconst { blockType, defaultVariation, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockVariations,\n\t\t\t\tgetBlockType,\n\t\t\t\tgetDefaultBlockVariation,\n\t\t\t} = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\tdefaultVariation: getDefaultBlockVariation( name, 'block' ),\n\t\t\t\tvariations: getBlockVariations( name, 'block' ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\tconst blockProps = useBlockProps();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<__experimentalBlockVariationPicker\n\t\t\t\ticon={ blockType?.icon?.src }\n\t\t\t\tlabel={ blockType?.title }\n\t\t\t\tvariations={ variations }\n\t\t\t\tonSelect={ ( nextVariation = defaultVariation ) => {\n\t\t\t\t\tif ( nextVariation.attributes ) {\n\t\t\t\t\t\tsetAttributes( nextVariation.attributes );\n\t\t\t\t\t}\n\t\t\t\t\tif ( nextVariation.innerBlocks ) {\n\t\t\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate(\n\t\t\t\t\t\t\t\tnextVariation.innerBlocks\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\tallowSkip\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst ColumnsEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocks( clientId ).length > 0,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks\n\t\t? ColumnsEditContainerWrapper\n\t\t: Placeholder;\n\n\treturn <Component { ...props } />;\n};\n\nexport default ColumnsEdit;\n"],"mappings":"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"}
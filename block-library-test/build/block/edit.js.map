{"version":3,"names":["_classnames","_interopRequireDefault","require","_data","_element","_coreData","_components","_i18n","_blockEditor","_patterns","_blocks","_lockUnlock","useLayoutClasses","unlock","blockEditorPrivateApis","PARTIAL_SYNCING_SUPPORTED_BLOCKS","patternsPrivateApis","isPartiallySynced","block","Object","keys","includes","name","attributes","metadata","bindings","values","some","binding","source","getPartiallySyncedAttributes","entries","filter","map","attributeKey","fullAlignments","useInferredLayout","blocks","parentLayout","initialInferredAlignmentRef","useRef","useMemo","length","alignment","current","undefined","isConstrained","type","hasFullAlignment","align","layout","PATCH_OPERATIONS","Remove","Replace","applyInitialOverrides","overrides","defaultValues","innerBlocks","blockId","id","newAttributes","_defaultValues$blockI","overrideAttribute","getOverridesFromBlocks","assign","_overrides$blockId","setBlockEditMode","setEditMode","mode","forEach","editMode","clientId","getHasOverridableBlocks","ReusableBlockEdit","ref","__unstableParentLayout","patternClientId","setAttributes","registry","useRegistry","hasAlreadyRendered","useHasRecursion","record","editedRecord","hasResolved","useEntityRecord","isMissing","initialOverrides","defaultValuesRef","replaceInnerBlocks","__unstableMarkNextChangeAsNotPersistent","setBlockEditingMode","useDispatch","blockEditorStore","syncDerivedUpdates","userCanEdit","getBlockEditingMode","getPostLinkProps","useSelect","select","canUser","coreStore","getBlocks","editingMode","getSettings","canEdit","editOriginalProps","postId","postType","useEffect","hasOverridableBlocks","initialBlocks","_editedRecord$blocks$","cloneBlock","content","parse","batch","layoutClasses","blockProps","useBlockProps","className","classnames","innerBlocksProps","useInnerBlocksProps","templateLock","renderAppender","InnerBlocks","ButtonBlockAppender","prevBlocks","subscribe","handleEditOriginal","event","onClick","resetOverrides","children","_react","createElement","Warning","__","Placeholder","Spinner","RecursionProvider","uniqueId","BlockControls","ToolbarGroup","ToolbarButton","href","disabled","__experimentalIsFocusable"],"sources":["@wordpress/block-library/src/block/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRegistry, useSelect, useDispatch } from '@wordpress/data';\nimport { useRef, useMemo, useEffect } from '@wordpress/element';\nimport { useEntityRecord, store as coreStore } from '@wordpress/core-data';\nimport {\n\tPlaceholder,\n\tSpinner,\n\tToolbarButton,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseInnerBlocksProps,\n\tRecursionProvider,\n\tuseHasRecursion,\n\tInnerBlocks,\n\tuseBlockProps,\n\tWarning,\n\tprivateApis as blockEditorPrivateApis,\n\tstore as blockEditorStore,\n\tBlockControls,\n} from '@wordpress/block-editor';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\nimport { parse, cloneBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\n\nconst { useLayoutClasses } = unlock( blockEditorPrivateApis );\nconst { PARTIAL_SYNCING_SUPPORTED_BLOCKS } = unlock( patternsPrivateApis );\n\nfunction isPartiallySynced( block ) {\n\treturn (\n\t\tObject.keys( PARTIAL_SYNCING_SUPPORTED_BLOCKS ).includes(\n\t\t\tblock.name\n\t\t) &&\n\t\t!! block.attributes.metadata?.bindings &&\n\t\tObject.values( block.attributes.metadata.bindings ).some(\n\t\t\t( binding ) => binding.source === 'core/pattern-overrides'\n\t\t)\n\t);\n}\nfunction getPartiallySyncedAttributes( block ) {\n\treturn Object.entries( block.attributes.metadata.bindings )\n\t\t.filter(\n\t\t\t( [ , binding ] ) => binding.source === 'core/pattern-overrides'\n\t\t)\n\t\t.map( ( [ attributeKey ] ) => attributeKey );\n}\n\nconst fullAlignments = [ 'full', 'wide', 'left', 'right' ];\n\nconst useInferredLayout = ( blocks, parentLayout ) => {\n\tconst initialInferredAlignmentRef = useRef();\n\n\treturn useMemo( () => {\n\t\t// Exit early if the pattern's blocks haven't loaded yet.\n\t\tif ( ! blocks?.length ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tlet alignment = initialInferredAlignmentRef.current;\n\n\t\t// Only track the initial alignment so that temporarily removed\n\t\t// alignments can be reapplied.\n\t\tif ( alignment === undefined ) {\n\t\t\tconst isConstrained = parentLayout?.type === 'constrained';\n\t\t\tconst hasFullAlignment = blocks.some( ( block ) =>\n\t\t\t\tfullAlignments.includes( block.attributes.align )\n\t\t\t);\n\n\t\t\talignment = isConstrained && hasFullAlignment ? 'full' : null;\n\t\t\tinitialInferredAlignmentRef.current = alignment;\n\t\t}\n\n\t\tconst layout = alignment ? parentLayout : undefined;\n\n\t\treturn { alignment, layout };\n\t}, [ blocks, parentLayout ] );\n};\n\n/**\n * Enum for patch operations.\n * We use integers here to minimize the size of the serialized data.\n * This has to be deserialized accordingly on the server side.\n * See block-bindings/sources/pattern.php\n */\nconst PATCH_OPERATIONS = {\n\t/** @type {0} */\n\tRemove: 0,\n\t/** @type {1} */\n\tReplace: 1,\n\t// Other operations are reserved for future use. (e.g. Add)\n};\n\n/**\n * @typedef {[typeof PATCH_OPERATIONS.Remove]} RemovePatch\n * @typedef {[typeof PATCH_OPERATIONS.Replace, unknown]} ReplacePatch\n * @typedef {RemovePatch | ReplacePatch} OverridePatch\n */\n\nfunction applyInitialOverrides( blocks, overrides = {}, defaultValues ) {\n\treturn blocks.map( ( block ) => {\n\t\tconst innerBlocks = applyInitialOverrides(\n\t\t\tblock.innerBlocks,\n\t\t\toverrides,\n\t\t\tdefaultValues\n\t\t);\n\t\tconst blockId = block.attributes.metadata?.id;\n\t\tif ( ! isPartiallySynced( block ) || ! blockId )\n\t\t\treturn { ...block, innerBlocks };\n\t\tconst attributes = getPartiallySyncedAttributes( block );\n\t\tconst newAttributes = { ...block.attributes };\n\t\tfor ( const attributeKey of attributes ) {\n\t\t\tdefaultValues[ blockId ] ??= {};\n\t\t\tdefaultValues[ blockId ][ attributeKey ] =\n\t\t\t\tblock.attributes[ attributeKey ];\n\t\t\t/** @type {OverridePatch} */\n\t\t\tconst overrideAttribute = overrides[ blockId ]?.[ attributeKey ];\n\t\t\tif ( ! overrideAttribute ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( overrideAttribute[ 0 ] === PATCH_OPERATIONS.Remove ) {\n\t\t\t\tdelete newAttributes[ attributeKey ];\n\t\t\t} else if ( overrideAttribute[ 0 ] === PATCH_OPERATIONS.Replace ) {\n\t\t\t\tnewAttributes[ attributeKey ] = overrideAttribute[ 1 ];\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t...block,\n\t\t\tattributes: newAttributes,\n\t\t\tinnerBlocks,\n\t\t};\n\t} );\n}\n\nfunction getOverridesFromBlocks( blocks, defaultValues ) {\n\t/** @type {Record<string, Record<string, OverridePatch>>} */\n\tconst overrides = {};\n\tfor ( const block of blocks ) {\n\t\tObject.assign(\n\t\t\toverrides,\n\t\t\tgetOverridesFromBlocks( block.innerBlocks, defaultValues )\n\t\t);\n\t\t/** @type {string} */\n\t\tconst blockId = block.attributes.metadata?.id;\n\t\tif ( ! isPartiallySynced( block ) || ! blockId ) continue;\n\t\tconst attributes = getPartiallySyncedAttributes( block );\n\t\tfor ( const attributeKey of attributes ) {\n\t\t\tif (\n\t\t\t\tblock.attributes[ attributeKey ] !==\n\t\t\t\tdefaultValues[ blockId ][ attributeKey ]\n\t\t\t) {\n\t\t\t\toverrides[ blockId ] ??= {};\n\t\t\t\t/**\n\t\t\t\t * Create a patch operation for the binding attribute.\n\t\t\t\t * We use a tuple here to minimize the size of the serialized data.\n\t\t\t\t * The first item is the operation type, the second item is the value if any.\n\t\t\t\t */\n\t\t\t\tif ( block.attributes[ attributeKey ] === undefined ) {\n\t\t\t\t\t/** @type {RemovePatch} */\n\t\t\t\t\toverrides[ blockId ][ attributeKey ] = [\n\t\t\t\t\t\tPATCH_OPERATIONS.Remove,\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\t/** @type {ReplacePatch} */\n\t\t\t\t\toverrides[ blockId ][ attributeKey ] = [\n\t\t\t\t\t\tPATCH_OPERATIONS.Replace,\n\t\t\t\t\t\tblock.attributes[ attributeKey ],\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn Object.keys( overrides ).length > 0 ? overrides : undefined;\n}\n\nfunction setBlockEditMode( setEditMode, blocks, mode ) {\n\tblocks.forEach( ( block ) => {\n\t\tconst editMode =\n\t\t\tmode || ( isPartiallySynced( block ) ? 'contentOnly' : 'disabled' );\n\t\tsetEditMode( block.clientId, editMode );\n\t\tsetBlockEditMode( setEditMode, block.innerBlocks, mode );\n\t} );\n}\n\nfunction getHasOverridableBlocks( blocks ) {\n\treturn blocks.some( ( block ) => {\n\t\tif ( isPartiallySynced( block ) ) return true;\n\t\treturn getHasOverridableBlocks( block.innerBlocks );\n\t} );\n}\n\nexport default function ReusableBlockEdit( {\n\tname,\n\tattributes: { ref, overrides },\n\t__unstableParentLayout: parentLayout,\n\tclientId: patternClientId,\n\tsetAttributes,\n} ) {\n\tconst registry = useRegistry();\n\tconst hasAlreadyRendered = useHasRecursion( ref );\n\tconst { record, editedRecord, hasResolved } = useEntityRecord(\n\t\t'postType',\n\t\t'wp_block',\n\t\tref\n\t);\n\tconst isMissing = hasResolved && ! record;\n\tconst initialOverrides = useRef( overrides );\n\tconst defaultValuesRef = useRef( {} );\n\n\tconst {\n\t\treplaceInnerBlocks,\n\t\t__unstableMarkNextChangeAsNotPersistent,\n\t\tsetBlockEditingMode,\n\t} = useDispatch( blockEditorStore );\n\tconst { syncDerivedUpdates } = unlock( useDispatch( blockEditorStore ) );\n\n\tconst { innerBlocks, userCanEdit, getBlockEditingMode, getPostLinkProps } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { canUser } = select( coreStore );\n\t\t\t\tconst {\n\t\t\t\t\tgetBlocks,\n\t\t\t\t\tgetBlockEditingMode: editingMode,\n\t\t\t\t\tgetSettings,\n\t\t\t\t} = select( blockEditorStore );\n\t\t\t\tconst blocks = getBlocks( patternClientId );\n\t\t\t\tconst canEdit = canUser( 'update', 'blocks', ref );\n\n\t\t\t\t// For editing link to the site editor if the theme and user permissions support it.\n\t\t\t\treturn {\n\t\t\t\t\tinnerBlocks: blocks,\n\t\t\t\t\tuserCanEdit: canEdit,\n\t\t\t\t\tgetBlockEditingMode: editingMode,\n\t\t\t\t\tgetPostLinkProps: getSettings().getPostLinkProps,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ patternClientId, ref ]\n\t\t);\n\n\tconst editOriginalProps = getPostLinkProps\n\t\t? getPostLinkProps( {\n\t\t\t\tpostId: ref,\n\t\t\t\tpostType: 'wp_block',\n\t\t  } )\n\t\t: {};\n\n\tuseEffect(\n\t\t() => setBlockEditMode( setBlockEditingMode, innerBlocks ),\n\t\t[ innerBlocks, setBlockEditingMode ]\n\t);\n\n\tconst hasOverridableBlocks = useMemo(\n\t\t() => getHasOverridableBlocks( innerBlocks ),\n\t\t[ innerBlocks ]\n\t);\n\n\tconst initialBlocks = useMemo(\n\t\t() =>\n\t\t\t// Clone the blocks to generate new client IDs.\n\t\t\teditedRecord.blocks?.map( ( block ) => cloneBlock( block ) ) ??\n\t\t\t( editedRecord.content && typeof editedRecord.content !== 'function'\n\t\t\t\t? parse( editedRecord.content )\n\t\t\t\t: [] ),\n\t\t[ editedRecord.blocks, editedRecord.content ]\n\t);\n\n\t// Apply the initial overrides from the pattern block to the inner blocks.\n\tuseEffect( () => {\n\t\tdefaultValuesRef.current = {};\n\t\tconst editingMode = getBlockEditingMode( patternClientId );\n\t\t// Replace the contents of the blocks with the overrides.\n\t\tregistry.batch( () => {\n\t\t\tsetBlockEditingMode( patternClientId, 'default' );\n\t\t\tsyncDerivedUpdates( () => {\n\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\tpatternClientId,\n\t\t\t\t\tapplyInitialOverrides(\n\t\t\t\t\t\tinitialBlocks,\n\t\t\t\t\t\tinitialOverrides.current,\n\t\t\t\t\t\tdefaultValuesRef.current\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} );\n\t\t\tsetBlockEditingMode( patternClientId, editingMode );\n\t\t} );\n\t}, [\n\t\t__unstableMarkNextChangeAsNotPersistent,\n\t\tpatternClientId,\n\t\tinitialBlocks,\n\t\treplaceInnerBlocks,\n\t\tregistry,\n\t\tgetBlockEditingMode,\n\t\tsetBlockEditingMode,\n\t\tsyncDerivedUpdates,\n\t] );\n\n\tconst { alignment, layout } = useInferredLayout(\n\t\tinnerBlocks,\n\t\tparentLayout\n\t);\n\tconst layoutClasses = useLayoutClasses( { layout }, name );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames(\n\t\t\t'block-library-block__reusable-block-container',\n\t\t\tlayout && layoutClasses,\n\t\t\t{ [ `align${ alignment }` ]: alignment }\n\t\t),\n\t} );\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\ttemplateLock: 'all',\n\t\tlayout,\n\t\trenderAppender: innerBlocks?.length\n\t\t\t? undefined\n\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t} );\n\n\t// Sync the `overrides` attribute from the updated blocks to the pattern block.\n\t// `syncDerivedUpdates` is used here to avoid creating an additional undo level.\n\tuseEffect( () => {\n\t\tconst { getBlocks } = registry.select( blockEditorStore );\n\t\tlet prevBlocks = getBlocks( patternClientId );\n\t\treturn registry.subscribe( () => {\n\t\t\tconst blocks = getBlocks( patternClientId );\n\t\t\tif ( blocks !== prevBlocks ) {\n\t\t\t\tprevBlocks = blocks;\n\t\t\t\tsyncDerivedUpdates( () => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\toverrides: getOverridesFromBlocks(\n\t\t\t\t\t\t\tblocks,\n\t\t\t\t\t\t\tdefaultValuesRef.current\n\t\t\t\t\t\t),\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}, blockEditorStore );\n\t}, [ syncDerivedUpdates, patternClientId, registry, setAttributes ] );\n\n\tconst handleEditOriginal = ( event ) => {\n\t\tsetBlockEditMode( setBlockEditingMode, innerBlocks, 'default' );\n\t\teditOriginalProps.onClick( event );\n\t};\n\n\tconst resetOverrides = () => {\n\t\tif ( overrides ) {\n\t\t\treplaceInnerBlocks( patternClientId, initialBlocks );\n\t\t}\n\t};\n\n\tlet children = null;\n\n\tif ( hasAlreadyRendered ) {\n\t\tchildren = (\n\t\t\t<Warning>\n\t\t\t\t{ __( 'Block cannot be rendered inside itself.' ) }\n\t\t\t</Warning>\n\t\t);\n\t}\n\n\tif ( isMissing ) {\n\t\tchildren = (\n\t\t\t<Warning>\n\t\t\t\t{ __( 'Block has been deleted or is unavailable.' ) }\n\t\t\t</Warning>\n\t\t);\n\t}\n\n\tif ( ! hasResolved ) {\n\t\tchildren = (\n\t\t\t<Placeholder>\n\t\t\t\t<Spinner />\n\t\t\t</Placeholder>\n\t\t);\n\t}\n\n\treturn (\n\t\t<RecursionProvider uniqueId={ ref }>\n\t\t\t{ userCanEdit && editOriginalProps && (\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\thref={ editOriginalProps.href }\n\t\t\t\t\t\t\tonClick={ handleEditOriginal }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Edit original' ) }\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\n\t\t\t{ hasOverridableBlocks && (\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tonClick={ resetOverrides }\n\t\t\t\t\t\t\tdisabled={ ! overrides }\n\t\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\n\t\t\t{ children === null ? (\n\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t) : (\n\t\t\t\t<div { ...blockProps }>{ children }</div>\n\t\t\t) }\n\t\t</RecursionProvider>\n\t);\n}\n"],"mappings":"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"}
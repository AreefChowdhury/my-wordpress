{"version":3,"names":["classnames","useRegistry","useSelect","useDispatch","useRef","useMemo","useEffect","useEntityRecord","store","coreStore","Placeholder","Spinner","ToolbarButton","ToolbarGroup","__","useInnerBlocksProps","RecursionProvider","useHasRecursion","InnerBlocks","useBlockProps","Warning","privateApis","blockEditorPrivateApis","blockEditorStore","BlockControls","patternsPrivateApis","parse","cloneBlock","unlock","useLayoutClasses","PARTIAL_SYNCING_SUPPORTED_BLOCKS","isPartiallySynced","block","Object","keys","includes","name","attributes","metadata","bindings","values","some","binding","source","getPartiallySyncedAttributes","entries","filter","map","attributeKey","fullAlignments","useInferredLayout","blocks","parentLayout","initialInferredAlignmentRef","length","alignment","current","undefined","isConstrained","type","hasFullAlignment","align","layout","PATCH_OPERATIONS","Remove","Replace","applyInitialOverrides","overrides","defaultValues","innerBlocks","blockId","id","newAttributes","_defaultValues$blockI","overrideAttribute","getOverridesFromBlocks","assign","_overrides$blockId","setBlockEditMode","setEditMode","mode","forEach","editMode","clientId","getHasOverridableBlocks","ReusableBlockEdit","ref","__unstableParentLayout","patternClientId","setAttributes","registry","hasAlreadyRendered","record","editedRecord","hasResolved","isMissing","initialOverrides","defaultValuesRef","replaceInnerBlocks","__unstableMarkNextChangeAsNotPersistent","setBlockEditingMode","syncDerivedUpdates","userCanEdit","getBlockEditingMode","getPostLinkProps","select","canUser","getBlocks","editingMode","getSettings","canEdit","editOriginalProps","postId","postType","hasOverridableBlocks","initialBlocks","_editedRecord$blocks$","content","batch","layoutClasses","blockProps","className","innerBlocksProps","templateLock","renderAppender","ButtonBlockAppender","prevBlocks","subscribe","handleEditOriginal","event","onClick","resetOverrides","children","createElement","uniqueId","href","disabled","__experimentalIsFocusable"],"sources":["@wordpress/block-library/src/block/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRegistry, useSelect, useDispatch } from '@wordpress/data';\nimport { useRef, useMemo, useEffect } from '@wordpress/element';\nimport { useEntityRecord, store as coreStore } from '@wordpress/core-data';\nimport {\n\tPlaceholder,\n\tSpinner,\n\tToolbarButton,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseInnerBlocksProps,\n\tRecursionProvider,\n\tuseHasRecursion,\n\tInnerBlocks,\n\tuseBlockProps,\n\tWarning,\n\tprivateApis as blockEditorPrivateApis,\n\tstore as blockEditorStore,\n\tBlockControls,\n} from '@wordpress/block-editor';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\nimport { parse, cloneBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\n\nconst { useLayoutClasses } = unlock( blockEditorPrivateApis );\nconst { PARTIAL_SYNCING_SUPPORTED_BLOCKS } = unlock( patternsPrivateApis );\n\nfunction isPartiallySynced( block ) {\n\treturn (\n\t\tObject.keys( PARTIAL_SYNCING_SUPPORTED_BLOCKS ).includes(\n\t\t\tblock.name\n\t\t) &&\n\t\t!! block.attributes.metadata?.bindings &&\n\t\tObject.values( block.attributes.metadata.bindings ).some(\n\t\t\t( binding ) => binding.source === 'core/pattern-overrides'\n\t\t)\n\t);\n}\nfunction getPartiallySyncedAttributes( block ) {\n\treturn Object.entries( block.attributes.metadata.bindings )\n\t\t.filter(\n\t\t\t( [ , binding ] ) => binding.source === 'core/pattern-overrides'\n\t\t)\n\t\t.map( ( [ attributeKey ] ) => attributeKey );\n}\n\nconst fullAlignments = [ 'full', 'wide', 'left', 'right' ];\n\nconst useInferredLayout = ( blocks, parentLayout ) => {\n\tconst initialInferredAlignmentRef = useRef();\n\n\treturn useMemo( () => {\n\t\t// Exit early if the pattern's blocks haven't loaded yet.\n\t\tif ( ! blocks?.length ) {\n\t\t\treturn {};\n\t\t}\n\n\t\tlet alignment = initialInferredAlignmentRef.current;\n\n\t\t// Only track the initial alignment so that temporarily removed\n\t\t// alignments can be reapplied.\n\t\tif ( alignment === undefined ) {\n\t\t\tconst isConstrained = parentLayout?.type === 'constrained';\n\t\t\tconst hasFullAlignment = blocks.some( ( block ) =>\n\t\t\t\tfullAlignments.includes( block.attributes.align )\n\t\t\t);\n\n\t\t\talignment = isConstrained && hasFullAlignment ? 'full' : null;\n\t\t\tinitialInferredAlignmentRef.current = alignment;\n\t\t}\n\n\t\tconst layout = alignment ? parentLayout : undefined;\n\n\t\treturn { alignment, layout };\n\t}, [ blocks, parentLayout ] );\n};\n\n/**\n * Enum for patch operations.\n * We use integers here to minimize the size of the serialized data.\n * This has to be deserialized accordingly on the server side.\n * See block-bindings/sources/pattern.php\n */\nconst PATCH_OPERATIONS = {\n\t/** @type {0} */\n\tRemove: 0,\n\t/** @type {1} */\n\tReplace: 1,\n\t// Other operations are reserved for future use. (e.g. Add)\n};\n\n/**\n * @typedef {[typeof PATCH_OPERATIONS.Remove]} RemovePatch\n * @typedef {[typeof PATCH_OPERATIONS.Replace, unknown]} ReplacePatch\n * @typedef {RemovePatch | ReplacePatch} OverridePatch\n */\n\nfunction applyInitialOverrides( blocks, overrides = {}, defaultValues ) {\n\treturn blocks.map( ( block ) => {\n\t\tconst innerBlocks = applyInitialOverrides(\n\t\t\tblock.innerBlocks,\n\t\t\toverrides,\n\t\t\tdefaultValues\n\t\t);\n\t\tconst blockId = block.attributes.metadata?.id;\n\t\tif ( ! isPartiallySynced( block ) || ! blockId )\n\t\t\treturn { ...block, innerBlocks };\n\t\tconst attributes = getPartiallySyncedAttributes( block );\n\t\tconst newAttributes = { ...block.attributes };\n\t\tfor ( const attributeKey of attributes ) {\n\t\t\tdefaultValues[ blockId ] ??= {};\n\t\t\tdefaultValues[ blockId ][ attributeKey ] =\n\t\t\t\tblock.attributes[ attributeKey ];\n\t\t\t/** @type {OverridePatch} */\n\t\t\tconst overrideAttribute = overrides[ blockId ]?.[ attributeKey ];\n\t\t\tif ( ! overrideAttribute ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( overrideAttribute[ 0 ] === PATCH_OPERATIONS.Remove ) {\n\t\t\t\tdelete newAttributes[ attributeKey ];\n\t\t\t} else if ( overrideAttribute[ 0 ] === PATCH_OPERATIONS.Replace ) {\n\t\t\t\tnewAttributes[ attributeKey ] = overrideAttribute[ 1 ];\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t...block,\n\t\t\tattributes: newAttributes,\n\t\t\tinnerBlocks,\n\t\t};\n\t} );\n}\n\nfunction getOverridesFromBlocks( blocks, defaultValues ) {\n\t/** @type {Record<string, Record<string, OverridePatch>>} */\n\tconst overrides = {};\n\tfor ( const block of blocks ) {\n\t\tObject.assign(\n\t\t\toverrides,\n\t\t\tgetOverridesFromBlocks( block.innerBlocks, defaultValues )\n\t\t);\n\t\t/** @type {string} */\n\t\tconst blockId = block.attributes.metadata?.id;\n\t\tif ( ! isPartiallySynced( block ) || ! blockId ) continue;\n\t\tconst attributes = getPartiallySyncedAttributes( block );\n\t\tfor ( const attributeKey of attributes ) {\n\t\t\tif (\n\t\t\t\tblock.attributes[ attributeKey ] !==\n\t\t\t\tdefaultValues[ blockId ][ attributeKey ]\n\t\t\t) {\n\t\t\t\toverrides[ blockId ] ??= {};\n\t\t\t\t/**\n\t\t\t\t * Create a patch operation for the binding attribute.\n\t\t\t\t * We use a tuple here to minimize the size of the serialized data.\n\t\t\t\t * The first item is the operation type, the second item is the value if any.\n\t\t\t\t */\n\t\t\t\tif ( block.attributes[ attributeKey ] === undefined ) {\n\t\t\t\t\t/** @type {RemovePatch} */\n\t\t\t\t\toverrides[ blockId ][ attributeKey ] = [\n\t\t\t\t\t\tPATCH_OPERATIONS.Remove,\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\t/** @type {ReplacePatch} */\n\t\t\t\t\toverrides[ blockId ][ attributeKey ] = [\n\t\t\t\t\t\tPATCH_OPERATIONS.Replace,\n\t\t\t\t\t\tblock.attributes[ attributeKey ],\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn Object.keys( overrides ).length > 0 ? overrides : undefined;\n}\n\nfunction setBlockEditMode( setEditMode, blocks, mode ) {\n\tblocks.forEach( ( block ) => {\n\t\tconst editMode =\n\t\t\tmode || ( isPartiallySynced( block ) ? 'contentOnly' : 'disabled' );\n\t\tsetEditMode( block.clientId, editMode );\n\t\tsetBlockEditMode( setEditMode, block.innerBlocks, mode );\n\t} );\n}\n\nfunction getHasOverridableBlocks( blocks ) {\n\treturn blocks.some( ( block ) => {\n\t\tif ( isPartiallySynced( block ) ) return true;\n\t\treturn getHasOverridableBlocks( block.innerBlocks );\n\t} );\n}\n\nexport default function ReusableBlockEdit( {\n\tname,\n\tattributes: { ref, overrides },\n\t__unstableParentLayout: parentLayout,\n\tclientId: patternClientId,\n\tsetAttributes,\n} ) {\n\tconst registry = useRegistry();\n\tconst hasAlreadyRendered = useHasRecursion( ref );\n\tconst { record, editedRecord, hasResolved } = useEntityRecord(\n\t\t'postType',\n\t\t'wp_block',\n\t\tref\n\t);\n\tconst isMissing = hasResolved && ! record;\n\tconst initialOverrides = useRef( overrides );\n\tconst defaultValuesRef = useRef( {} );\n\n\tconst {\n\t\treplaceInnerBlocks,\n\t\t__unstableMarkNextChangeAsNotPersistent,\n\t\tsetBlockEditingMode,\n\t} = useDispatch( blockEditorStore );\n\tconst { syncDerivedUpdates } = unlock( useDispatch( blockEditorStore ) );\n\n\tconst { innerBlocks, userCanEdit, getBlockEditingMode, getPostLinkProps } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { canUser } = select( coreStore );\n\t\t\t\tconst {\n\t\t\t\t\tgetBlocks,\n\t\t\t\t\tgetBlockEditingMode: editingMode,\n\t\t\t\t\tgetSettings,\n\t\t\t\t} = select( blockEditorStore );\n\t\t\t\tconst blocks = getBlocks( patternClientId );\n\t\t\t\tconst canEdit = canUser( 'update', 'blocks', ref );\n\n\t\t\t\t// For editing link to the site editor if the theme and user permissions support it.\n\t\t\t\treturn {\n\t\t\t\t\tinnerBlocks: blocks,\n\t\t\t\t\tuserCanEdit: canEdit,\n\t\t\t\t\tgetBlockEditingMode: editingMode,\n\t\t\t\t\tgetPostLinkProps: getSettings().getPostLinkProps,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ patternClientId, ref ]\n\t\t);\n\n\tconst editOriginalProps = getPostLinkProps\n\t\t? getPostLinkProps( {\n\t\t\t\tpostId: ref,\n\t\t\t\tpostType: 'wp_block',\n\t\t  } )\n\t\t: {};\n\n\tuseEffect(\n\t\t() => setBlockEditMode( setBlockEditingMode, innerBlocks ),\n\t\t[ innerBlocks, setBlockEditingMode ]\n\t);\n\n\tconst hasOverridableBlocks = useMemo(\n\t\t() => getHasOverridableBlocks( innerBlocks ),\n\t\t[ innerBlocks ]\n\t);\n\n\tconst initialBlocks = useMemo(\n\t\t() =>\n\t\t\t// Clone the blocks to generate new client IDs.\n\t\t\teditedRecord.blocks?.map( ( block ) => cloneBlock( block ) ) ??\n\t\t\t( editedRecord.content && typeof editedRecord.content !== 'function'\n\t\t\t\t? parse( editedRecord.content )\n\t\t\t\t: [] ),\n\t\t[ editedRecord.blocks, editedRecord.content ]\n\t);\n\n\t// Apply the initial overrides from the pattern block to the inner blocks.\n\tuseEffect( () => {\n\t\tdefaultValuesRef.current = {};\n\t\tconst editingMode = getBlockEditingMode( patternClientId );\n\t\t// Replace the contents of the blocks with the overrides.\n\t\tregistry.batch( () => {\n\t\t\tsetBlockEditingMode( patternClientId, 'default' );\n\t\t\tsyncDerivedUpdates( () => {\n\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\tpatternClientId,\n\t\t\t\t\tapplyInitialOverrides(\n\t\t\t\t\t\tinitialBlocks,\n\t\t\t\t\t\tinitialOverrides.current,\n\t\t\t\t\t\tdefaultValuesRef.current\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} );\n\t\t\tsetBlockEditingMode( patternClientId, editingMode );\n\t\t} );\n\t}, [\n\t\t__unstableMarkNextChangeAsNotPersistent,\n\t\tpatternClientId,\n\t\tinitialBlocks,\n\t\treplaceInnerBlocks,\n\t\tregistry,\n\t\tgetBlockEditingMode,\n\t\tsetBlockEditingMode,\n\t\tsyncDerivedUpdates,\n\t] );\n\n\tconst { alignment, layout } = useInferredLayout(\n\t\tinnerBlocks,\n\t\tparentLayout\n\t);\n\tconst layoutClasses = useLayoutClasses( { layout }, name );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames(\n\t\t\t'block-library-block__reusable-block-container',\n\t\t\tlayout && layoutClasses,\n\t\t\t{ [ `align${ alignment }` ]: alignment }\n\t\t),\n\t} );\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\ttemplateLock: 'all',\n\t\tlayout,\n\t\trenderAppender: innerBlocks?.length\n\t\t\t? undefined\n\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t} );\n\n\t// Sync the `overrides` attribute from the updated blocks to the pattern block.\n\t// `syncDerivedUpdates` is used here to avoid creating an additional undo level.\n\tuseEffect( () => {\n\t\tconst { getBlocks } = registry.select( blockEditorStore );\n\t\tlet prevBlocks = getBlocks( patternClientId );\n\t\treturn registry.subscribe( () => {\n\t\t\tconst blocks = getBlocks( patternClientId );\n\t\t\tif ( blocks !== prevBlocks ) {\n\t\t\t\tprevBlocks = blocks;\n\t\t\t\tsyncDerivedUpdates( () => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\toverrides: getOverridesFromBlocks(\n\t\t\t\t\t\t\tblocks,\n\t\t\t\t\t\t\tdefaultValuesRef.current\n\t\t\t\t\t\t),\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}, blockEditorStore );\n\t}, [ syncDerivedUpdates, patternClientId, registry, setAttributes ] );\n\n\tconst handleEditOriginal = ( event ) => {\n\t\tsetBlockEditMode( setBlockEditingMode, innerBlocks, 'default' );\n\t\teditOriginalProps.onClick( event );\n\t};\n\n\tconst resetOverrides = () => {\n\t\tif ( overrides ) {\n\t\t\treplaceInnerBlocks( patternClientId, initialBlocks );\n\t\t}\n\t};\n\n\tlet children = null;\n\n\tif ( hasAlreadyRendered ) {\n\t\tchildren = (\n\t\t\t<Warning>\n\t\t\t\t{ __( 'Block cannot be rendered inside itself.' ) }\n\t\t\t</Warning>\n\t\t);\n\t}\n\n\tif ( isMissing ) {\n\t\tchildren = (\n\t\t\t<Warning>\n\t\t\t\t{ __( 'Block has been deleted or is unavailable.' ) }\n\t\t\t</Warning>\n\t\t);\n\t}\n\n\tif ( ! hasResolved ) {\n\t\tchildren = (\n\t\t\t<Placeholder>\n\t\t\t\t<Spinner />\n\t\t\t</Placeholder>\n\t\t);\n\t}\n\n\treturn (\n\t\t<RecursionProvider uniqueId={ ref }>\n\t\t\t{ userCanEdit && editOriginalProps && (\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\thref={ editOriginalProps.href }\n\t\t\t\t\t\t\tonClick={ handleEditOriginal }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Edit original' ) }\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\n\t\t\t{ hasOverridableBlocks && (\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tonClick={ resetOverrides }\n\t\t\t\t\t\t\tdisabled={ ! overrides }\n\t\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t\t\t</ToolbarButton>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\n\t\t\t{ children === null ? (\n\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t) : (\n\t\t\t\t<div { ...blockProps }>{ children }</div>\n\t\t\t) }\n\t\t</RecursionProvider>\n\t);\n}\n"],"mappings":"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"}
{"version":3,"names":["classnames","useBlockProps","useInnerBlocksProps","store","blockEditorStore","useSelect","blocksStore","DEFAULT_BLOCK","name","attributesToCopy","ButtonsEdit","attributes","className","_layout$orientation","fontSize","layout","style","blockProps","typography","preferredStyle","hasButtonVariations","select","preferredStyleVariations","getSettings","__experimentalPreferredStyleVariations","buttonVariations","getBlockVariations","value","length","innerBlocksProps","defaultBlock","directInsert","template","templateInsertUpdatesSelection","orientation","createElement"],"sources":["@wordpress/block-library/src/buttons/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { store as blocksStore } from '@wordpress/blocks';\n\nconst DEFAULT_BLOCK = {\n\tname: 'core/button',\n\tattributesToCopy: [\n\t\t'backgroundColor',\n\t\t'border',\n\t\t'className',\n\t\t'fontFamily',\n\t\t'fontSize',\n\t\t'gradient',\n\t\t'style',\n\t\t'textColor',\n\t\t'width',\n\t],\n};\n\nfunction ButtonsEdit( { attributes, className } ) {\n\tconst { fontSize, layout, style } = attributes;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( className, {\n\t\t\t'has-custom-font-size': fontSize || style?.typography?.fontSize,\n\t\t} ),\n\t} );\n\tconst { preferredStyle, hasButtonVariations } = useSelect( ( select ) => {\n\t\tconst preferredStyleVariations =\n\t\t\tselect( blockEditorStore ).getSettings()\n\t\t\t\t.__experimentalPreferredStyleVariations;\n\t\tconst buttonVariations = select( blocksStore ).getBlockVariations(\n\t\t\t'core/button',\n\t\t\t'inserter'\n\t\t);\n\t\treturn {\n\t\t\tpreferredStyle: preferredStyleVariations?.value?.[ 'core/button' ],\n\t\t\thasButtonVariations: buttonVariations.length > 0,\n\t\t};\n\t}, [] );\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tdefaultBlock: DEFAULT_BLOCK,\n\t\t// This check should be handled by the `Inserter` internally to be consistent across all blocks that use it.\n\t\tdirectInsert: ! hasButtonVariations,\n\t\ttemplate: [\n\t\t\t[\n\t\t\t\t'core/button',\n\t\t\t\t{ className: preferredStyle && `is-style-${ preferredStyle }` },\n\t\t\t],\n\t\t],\n\t\ttemplateInsertUpdatesSelection: true,\n\t\torientation: layout?.orientation ?? 'horizontal',\n\t} );\n\n\treturn <div { ...innerBlocksProps } />;\n}\n\nexport default ButtonsEdit;\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,YAAY;;AAEnC;AACA;AACA;AACA,SACCC,aAAa,EACbC,mBAAmB,EACnBC,KAAK,IAAIC,gBAAgB,QACnB,yBAAyB;AAChC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASF,KAAK,IAAIG,WAAW,QAAQ,mBAAmB;AAExD,MAAMC,aAAa,GAAG;EACrBC,IAAI,EAAE,aAAa;EACnBC,gBAAgB,EAAE,CACjB,iBAAiB,EACjB,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,UAAU,EACV,UAAU,EACV,OAAO,EACP,WAAW,EACX,OAAO;AAET,CAAC;AAED,SAASC,WAAWA,CAAE;EAAEC,UAAU;EAAEC;AAAU,CAAC,EAAG;EAAA,IAAAC,mBAAA;EACjD,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGL,UAAU;EAC9C,MAAMM,UAAU,GAAGhB,aAAa,CAAE;IACjCW,SAAS,EAAEZ,UAAU,CAAEY,SAAS,EAAE;MACjC,sBAAsB,EAAEE,QAAQ,IAAIE,KAAK,EAAEE,UAAU,EAAEJ;IACxD,CAAE;EACH,CAAE,CAAC;EACH,MAAM;IAAEK,cAAc;IAAEC;EAAoB,CAAC,GAAGf,SAAS,CAAIgB,MAAM,IAAM;IACxE,MAAMC,wBAAwB,GAC7BD,MAAM,CAAEjB,gBAAiB,CAAC,CAACmB,WAAW,CAAC,CAAC,CACtCC,sCAAsC;IACzC,MAAMC,gBAAgB,GAAGJ,MAAM,CAAEf,WAAY,CAAC,CAACoB,kBAAkB,CAChE,aAAa,EACb,UACD,CAAC;IACD,OAAO;MACNP,cAAc,EAAEG,wBAAwB,EAAEK,KAAK,GAAI,aAAa,CAAE;MAClEP,mBAAmB,EAAEK,gBAAgB,CAACG,MAAM,GAAG;IAChD,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMC,gBAAgB,GAAG3B,mBAAmB,CAAEe,UAAU,EAAE;IACzDa,YAAY,EAAEvB,aAAa;IAC3B;IACAwB,YAAY,EAAE,CAAEX,mBAAmB;IACnCY,QAAQ,EAAE,CACT,CACC,aAAa,EACb;MAAEpB,SAAS,EAAEO,cAAc,IAAK,YAAYA,cAAgB;IAAE,CAAC,CAC/D,CACD;IACDc,8BAA8B,EAAE,IAAI;IACpCC,WAAW,GAAArB,mBAAA,GAAEE,MAAM,EAAEmB,WAAW,cAAArB,mBAAA,cAAAA,mBAAA,GAAI;EACrC,CAAE,CAAC;EAEH,OAAOsB,aAAA;IAAA,GAAUN;EAAgB,CAAI,CAAC;AACvC;AAEA,eAAenB,WAAW"}